x1 = c(1,2)
z = 2
x2 = x1 + z
x2
X = cbind(x1, x2)
X
X = cbind(rep(1,2), x1, x2)
X
G = t(X)%*%X)
G = t(X)%*%X
solve(G)
exit
q()
install.packages("penalizedSVM")
library(caret)
library(tidyverse)
library(cars)
library(ggplot2)
q()
install.packages("caret")
install.packages("tidyverse")
library("tidyverse")
library(tidyverse)
library(caret)
install.packages("recipes")
install.packages("recipes")
library(caret)
install.packages("recipes", dependencies = TRUE)
install.packages("recipes", dependencies = TRUE)
library(tidyverse)
#library(caret)
library(reshape2)
library(Amelia)
setwd("C:/Users/kushd/classes/4741/project/ORIE4741Project")
library(pscl)
install.packages("pscl")
library(pscl)
read.csv("nonzero.csv")
data = read.csv("nonzero.csv")
View(data)
colnames(data)
X = data[,1:7]
y = data[,8]
library(caret)
?createDataPartition
x = createDataPartition(y, p=0.2)
x
length(x)
length(x$Resample1)
x = createDataPartition(y, p=0.8)
?seq_len
seq_len(5)
n = nrow(data)
train.ind = sample(1:n, size=floor(0.8*n))
train.ind
len(train.ind)
length(train.ind)
train = data[train.ind,]
test = data[-train.ind,]
X.tr = train[,1:7]
y.tr = train[,8]
apply(data, class)
apply(data, FUN=class)
sapply(data, FUN=class)
View(data)
X.tr <- within(X.tr, {
X.tr[,1] <- factor(X.tr[,1])
X.tr[,2] <- factor(X.tr[,2])
X.tr[,3] <- factor(X.tr[,3])
X.tr[,4] <- factor(X.tr[,4])
})
View(X.tr)
hist(y.tr)
colname(data[,8])
columnname(data[,8])
?colnames
colnames(data[,8])
colnames(data)
colnames(data)[8]
data = read.csv("nonzero.csv")
data = within(data, {
data[,1] = factor(data[,1])
data[,2] = factor(data[,2])
data[,3] = factor(data[,3])
data[,4] = factor(data[,4])
})
colnames(data)[8] = "y"
View(data)
data = read.csv("nonzero.csv")
data = within(data, {
data[,1] = factor(data[,1])
data[,2] = factor(data[,2])
data[,3] = factor(data[,3])
data[,4] = factor(data[,4])
})
names(data)[names(data) == colnames(data)[8]] <- "y"
data = read.csv("nonzero.csv")
data = within(data, {
data[,1] = factor(data[,1])
data[,2] = factor(data[,2])
data[,3] = factor(data[,3])
data[,4] = factor(data[,4])
})
names(data)
data = read.csv("nonzero.csv")
data[,1] = factor(data[,1])
data[,2] = factor(data[,2])
data[,3] = factor(data[,3])
data[,4] = factor(data[,4])
names(data)[names(data) == colnames(data)[8]] <- "y"
names(data)
View(data)
n = nrow(data)
train.ind = sample(1:n, size=floor(0.8*n))
train = data[train.ind,]
test = data[-train.ind,]
zeroinfl(y ~ ., data=train)
sapply(data, class)
names(data)[8] <- "y"
sapply(data, class)
View(data)
data = read.csv("nonzero.csv")
data[,1:5] = factor(data[,1:5])
names(data)[1:8] <- c("p1", "p2", "p3", "p4", "fire", "plansets", "units", "y")
n = nrow(data)
train.ind = sample(1:n, size=floor(0.8*n))
train = data[train.ind,]
test = data[-train.ind,]
View(data)
data = read.csv("nonzero.csv")
data[,1:5] = sapply(data[,1:5], factor)
View(data)
names(data)[1:8] <- c("p1", "p2", "p3", "p4", "fire", "plansets", "units", "y")
View(data)
data[,"units"] = log(data[,"units"] + c(1))
plot(data[,"units"], data[,"y"])
n = nrow(data)
train.ind = sample(1:n, size=floor(0.8*n))
train = data[train.ind,]
test = data[-train.ind,]
View(data)
zeroinfl(y ~ ., data=train)
zeroinfl(y ~ ., data=train, dist="negbin"")
ljkjlk
""
zeroinfl(y ~ ., data=train, dist="negbin")
sum(is.na(data))
zeroinfl(y ~ . | 1, data=train, dist="negbin")
View(data)
zeroinfl(y ~ . - plansets, data=train, dist="negbin")
zeroinfl(y ~ fire, data=train, dist="negbin")
zeroinfl(y ~ . - p1, data=train, dist="negbin")
zeroinfl(y ~ . - p2, data=train, dist="negbin")
zeroinfl(y ~ . - p3, data=train, dist="negbin")
zeroinfl(y ~ . - p4, data=train, dist="negbin")
zeroinfl(y ~ . - fire, data=train, dist="negbin")
x = train[,1:4]
solve(t(x) %*% x)
x = as.matrix(x)
solve(t(x) %*% x)
x = as.numeric(train[,1:4])
class(x)
x = as.numeric(x)
x = train[,1:4]
x = sapply(x, as.numeric)
dim(x)
solve(t(x) %*% x)
x = train[,1:5]
x = sapply(x, as.numeric)
solve(t(x) %*% x)
sum(x[,2])
sum(x[,3])
sum(x[,4])
zeroinfl(y ~ . - p3, data=train, dist="negbin")
model = zeroinfl(y ~ . - p3, data=train, dist="negbin")
data = read.csv("nonzero.csv")
names(data)[1:8] = c("p1", "p2", "p3", "p4", "fire", "plansets", "units", "y")
data[,"units"] = log(data[,"units"] + c(1))
n = nrow(data)
train.ind = sample(1:n, size=floor(0.8*n))
train = data[train.ind,]
test = data[-train.ind,]
model = zeroinfl(y ~ . - p3, data=train, dist="negbin")
summary(model)
model.null <- update(model, . ~ 1)
pchisq(2 * (logLik(model) - logLik(model.null)), df = 6, lower.tail = FALSE)
negbin.model = glm(y ~ ., family=negbin, data=train)
negbin.model = glm.nb(y ~ ., data=train)
library(MASS)
negbin.model = glm.nb(y ~ ., data=train)
summary(negbin.model)
vuong(model, negbin.model)
vuong(negbin.model, model)
summary(model)
model$coefficients
model$coefficients$count
model.coeff = model$coefficients$count
train.nop3 = train[,-"p3"]
train[,"p3"]
train[,-c("p3")]
View(train)
train.nop3 = train[,-3]
dim(train.nop3)
dim(model.coeff)
length(model.coeff)
n.tr = nrow(train.nop3)
X.tr = cbind(rep(1,n), train.nop3)
X.tr = cbind(rep(1,n.tr), train.nop3)
View(X.tr)
intercept = rep(1,n.tr)
X.tr = cbind(intercept, train.nop3)
y.tr = X.tr[,"y"]
X.tr = X.tr[,-8]
predict(model, X.tr)
model.coeff
colnames(X.tr)
model$coefficients$zero
X.tr = cbind(rep(1,n), train)
X.tr = cbind(rep(1,n.tr), train)
X.tr = X.tr[,1:8]
X.tr = cbind(rep(1,n.tr), train)
y.tr = X.tr[,9]
X.tr = X.tr[,1:8]
predict(model, X.tr)
preds = predict(model, X.tr)
sum(abs(preds-y.tr))/n.tr
plot(preds, y.tr)
preds = predict(negbin.model, X.tr)
sum(abs(preds-y.tr))/n.tr
preds = predict(model, X.tr)
sum((preds-y.tr)^2)/n.tr
sqrt(sum(abs(preds-y.tr))/n.tr)
sqrt(sum(abs(preds-y.tr))/n.tr)
sqrt(sum((preds-y.tr)^2)/n.tr)
sqrt(sum((preds-y.tr)^2))/n.tr
sqrt(sum((preds-y.tr)^2)/n.tr)
rmse(y.tr, preds)
RMSE = function(m, o){
sqrt(mean((m - o)^2))
}
RMSE(preds, y.tr)
preds = predict(negbin.model, X.tr)
RMSE(preds, y.tr)
summary(model)
